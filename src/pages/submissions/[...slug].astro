---
import { getCollection, getEntryBySlug } from "astro:content";
import { intlOptions } from "../../data";
import PageLayout from "../../layouts/PageLayout.astro";

export async function getStaticPaths() {
  const news = await getCollection("submissions");
  return news.map(({ slug }) => ({ params: { slug } }));
}

const { slug } = Astro.params;
const {
  render,
  data: {
    title,
    creator,
    creatorLink,
    using,
    githubLink,
    itchioLink,
    devlogPrefix,
    wip,
    example,
  },
} = (await getEntryBySlug("submissions", slug!))!;
const { Content } = await render();

const getDevlogs = async () => {
  if (devlogPrefix) {
    return await getCollection("devlogs", ({ id }) =>
      id.startsWith(devlogPrefix)
    );
  }
};

const devlogs = await getDevlogs();
---

<PageLayout title={`${title} - textjam winter2023 submission`}>
  {
    example && (
      <>
        <i>
          <p>
            <b>! EXAMPLE !</b>
          </p>
          <p>
            this is not an entry to this textjam, this is an example of what an
            entry looks like
          </p>
          <p>
            <b>! EXAMPLE !</b>
          </p>
        </i>
        <div class="spacing" />
      </>
    )
  }
  <p>{title}</p>
  {
    creatorLink ? (
      <p>
        by <a href={creatorLink}>{creator}</a>
      </p>
    ) : (
      <p>by {creator}</p>
    )
  }
  {wip && <i>work in progress</i>}
  <div class="spacing"></div>
  {
    githubLink && (
      <p>
        github:{" "}
        <a href={githubLink}>{githubLink.split("/").slice(2, 5).join("/")}</a>
      </p>
    )
  }
  {
    itchioLink && (
      <p>
        itch.io: <a href={itchioLink}>{itchioLink.split("//")[1]}</a>
      </p>
    )
  }
  {using && <p>using: {using.join(",")}</p>}
  {
    devlogs && (
      <>
        <div class="spacing" />
        devlogs
        {devlogs
          .sort((a, b) => (a.data.date > b.data.date ? -1 : 1))
          .map(({ slug: devlogSlug, data }) => (
            <p>
              -{" "}
              {`${new Intl.DateTimeFormat("en-US", intlOptions)
                .format(data.date)
                .toLowerCase()},`}
              <a href={`../../devlogs/${devlogSlug}/`}>{data.title}</a>
            </p>
          ))}
        <div class="spacing" />
      </>
    )
  }
  <Content />
</PageLayout>

<style is:global>
  .spacing {
    height: 1rem;
  }

  img {
    border: 2px solid white;
  }
</style>
